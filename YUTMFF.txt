York-University-Turing-Machine-File-Format(YUTMFF)

• They use a 1-way infinite tape.

• The tape alphabet has two different special symbols, *blank* and *leftend* that are not part of the
input alphabet.

• Initially, if the input string is w, the tape contains *leftend*w at the left end of the tape,
and the rest of the tape contains only *blank* symbols. The head of the Turing machine is
initially positioned at the first character of the input string w (i.e., at the tape’s second
square).

• Whenever the Turing machine sees the *leftend* symbol, it must leave it unchanged and move
right (but it can change state).

We also make some naming conventions. We assume that the state set of the Turing
machine is Q = {q0, q1, . . . , qn−1} where n ≥ 3 and the tape alphabet of the Turing machine
is Γ = {c0, c1, . . . , cm−1} where m ≥ 3. We also assume that q0 is the initial state, qn−2 is
the accepting state and qn−1 is the rejecting state. We assume that the input alphabet is
Σ = {c0, c1, . . . , ck−1} where 0 ≤ k ≤ m − 2 and cm−2 = *blank* and cm−1 = *leftend*.

We now explain how to describe, using YUTMFF, a Turing machine that follows the
conventions described above. The first line of the file contains the three integers n, m, and
k, separated by single spaces. (Recall that these are the sizes of the state set, tape alphabet
and input alphabet, respectively.)
Each character in the tape alphabet has a name. The second line of the file contains m−2
strings separated by single spaces that give the names of the characters c0, c1, . . . , cm−3. We
use the name *blank* to represent cm−2 and *leftend* to represent cm−1.

The third line contains a non-negative integer T. Following this, there are T lines. Each of these remaining lines
of the description contains five items i, a, i0, a0, d separated by single spaces, where i and i0 are integers with
0 ≤ i ≤ n−3 and 0 ≤ i0 ≤ n − 1 (inclusive), a and a0 are names of characters in the tape alphabet and d is a single character
that is either L or R. This line indicates that δ(qi, a) = (qi0, a0, d). No two lines should have the same i and a.

Note that no transitions are given for situations when the machine is in state qn−2 or qn−1 since those are the
accepting and rejecting states. If no transition is given to describe δ(qi, a) for a non-halting state qi, then it is assumed that
δ(qi, a) = (qi, a, R).

Line T+1 is the command line which can be used to control some of the simulation parameters. The format is as follows:
integer space integer space integer space long space string space boolean space boolean space long.
The first integer describes the maximum number of strings to test.
The second integer describes the minimum length of the strings to test.
The third integer decribes the maximum length of the strings to test.
The first long decribes the maximum number of steps to simulate before terminating.
The string is the initial string to start the testing from.
The first boolean describes the trace which will show every single simulated step.
The second boolean describes whether or not to keep track of the amount of processing time and finally the second long (last entry) describes the maximum amount of time to test each string in milliseconds.

The command line can have anywhere between 0 to 8 entries decribed by the above format.
If it has only 2, the second integer will be processed as the maximum length and not the minimum length.
If it has exactly 7, the last entry can be a long instead of a boolean describing the maximum process time.
If it has less than the maximum number of entries (8), default values will be used for non-specified variables.
If the string "default" or "DEFAULT" is entered as one of the entries, then the defualt value for that variable will be used.

Anything after these T+1 lines will be ignored, so you can use them to write comments or explanations.
